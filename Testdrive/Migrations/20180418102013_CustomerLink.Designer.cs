// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TestRide.Data;
using TestRide.Models;

namespace TestRide.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180418102013_CustomerLink")]
    partial class CustomerLink
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestRide.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CarName");

                    b.Property<string>("Licenseplate");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("TestRide.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("SocialSecurityNumber");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("TestRide.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AllowedRoles");

                    b.Property<string>("Color");

                    b.Property<string>("Icon");

                    b.Property<string>("Link");

                    b.Property<int>("Order");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("TestRide.Models.Testdrive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CarId");

                    b.Property<int?>("CustomerId");

                    b.Property<long>("Timestamp");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserId");

                    b.ToTable("Testdrives");
                });

            modelBuilder.Entity("TestRide.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ExternalId");

                    b.Property<string>("Name");

                    b.Property<int>("Roles");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TestRide.Models.Testdrive", b =>
                {
                    b.HasOne("TestRide.Models.Car", "Car")
                        .WithMany("Testdrives")
                        .HasForeignKey("CarId");

                    b.HasOne("TestRide.Models.Customer", "Customer")
                        .WithMany("Testdrives")
                        .HasForeignKey("CustomerId");

                    b.HasOne("TestRide.Models.User", "User")
                        .WithMany("Testdrives")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
